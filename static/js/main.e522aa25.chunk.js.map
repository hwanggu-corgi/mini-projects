{"version":3,"sources":["components/Buttons/index.js","components/ChatTextArea/index.js","components/ChatBox/index.js","components/Navigation/index.js","components/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","Button","styled","button","icon","faPaperPlane","colorGrey","ChatTextArea","Div","div","Textarea","textarea","ChatBox","Section","section","Header","header","MobileNavigation","useState","toggled","setToggled","Nav","nav","onClick","_","users","UserList","userList","map","user","User","name","Ul","ul","props","Span","span","Li","li","faUser","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAOO,SAASA,IACZ,IAAMC,EAASC,IAAOC,OAAV,iPAHI,WAahB,OACI,cAACF,EAAD,UACI,cAAC,IAAD,CAAiBG,KAAMC,QCjBnC,I,IAAMC,EAAY,UAEX,SAASC,IACZ,IAAMC,EAAMN,IAAOO,IAAV,0IACeH,GAMlBI,EAAWR,IAAOS,SAAV,mRAIUL,GASxB,OACI,cAACE,EAAD,UACI,cAACE,EAAD,MCvBL,SAASE,IACZ,IAAMC,EAAUX,IAAOY,QAAV,8NAHG,WAaVC,EAASb,IAAOc,OAAV,wFAKZ,OACI,oCACI,cAACD,EAAD,UACI,4CAEJ,eAACF,EAAD,WACI,+CACA,uD,0BCvBT,SAASI,IAAoB,IAAD,EACDC,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,KAEzBnB,EAASC,IAAOC,OAAV,kJAONkB,EAAMnB,IAAOoB,IAAV,yFAXO,WAgBVd,EAAMN,IAAOO,IAAV,+MAWT,OACI,cAACY,EAAD,UACI,eAACpB,EAAD,CAAQsB,QAAS,SAAAC,GAAC,OAAIJ,GAAYD,IAAlC,UACI,cAACX,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,SC9BhB,IAIMiB,EAAQ,CAAC,QAAS,SAEjB,SAASC,IACZ,IAAMC,EAAWF,EAAMG,KAAI,SAAAC,GAAI,OAAI,cAACC,EAAD,CAAMC,KAAMF,OACzCG,EAAK9B,IAAO+B,GAAV,sMARM,WAgBd,OACI,cAACD,EAAD,UACKL,IAKb,SAASG,EAAKI,GACV,IAAM1B,EAAMN,IAAOO,IAAV,+XAtBM,UADC,WAwCV0B,EAAOjC,IAAOkC,KAAV,2DAIJC,EAAKnC,IAAOoC,GAAV,mHAMR,OACI,eAACD,EAAD,WACI,cAAC7B,EAAD,UACI,8BACI,cAAC,IAAD,CAAiBJ,KAAMmC,UAG/B,cAACJ,EAAD,UAAOD,EAAMH,UC5CVS,MAZf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACzC,EAAD,IACA,cAACO,EAAD,IACA,cAACK,EAAD,IACA,cAACK,EAAD,IACA,cAACS,EAAD,QCFSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e522aa25.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst colorOrange = \"#FFA341\";\n\nexport function SubmitButton() {\n    const Button = styled.button`\n        border: none;\n        background-color: white;\n        font-size: 1.5em;\n        text-decoration: none;\n        color: ${colorOrange};\n        padding: 0.5em;\n        margin: 1em;\n        cursor: pointer;\n    `;\n    return (\n        <Button>\n            <FontAwesomeIcon icon={faPaperPlane}/>\n        </Button>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst colorGrey = \"#EEEEEE\";\n\nexport function ChatTextArea() {\n    const Div = styled.div`\n        background-color: ${colorGrey};\n        padding: 1em;\n        border-radius: 5em;\n        display:flex;\n    `;\n\n    const Textarea = styled.textarea`\n        border: none;\n        resize: none;\n        width: 100%;\n        background-color: ${colorGrey};\n        text-decoration: none;\n        padding: 1em;\n        overflow-y: scroll;\n\n        &:focus {\n            outline: none;\n        }\n    `;\n    return (\n        <Div>\n            <Textarea/>\n        </Div>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst colorOrange = \"#FFA341\";\n\nexport function ChatBox() {\n    const Section = styled.section`\n        margin: 0;\n        background-color: ${colorOrange};\n        padding: 1em;\n        border-radius: 1.5em;\n        max-width: 12em;\n        font-size: 0.8em;\n        white-space: pre-wrap;\n    `;\n\n    const Header = styled.header`\n        font-size: 0.7em;\n        padding: 0.5em 1em;\n    `;\n\n    return (\n        <article>\n            <Header>\n                <span>User 1</span>\n            </Header>\n            <Section>\n                <p>This is a test</p>\n                <p>This is a test 2</p>\n            </Section>\n        </article>\n    );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst colorOrange = \"#FFA341\";\n\nexport function MobileNavigation() {\n    const [toggled, setToggled] = useState(false);\n    const Button = styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.5em;\n        cursor: pointer;\n    `;\n\n    const Nav = styled.nav`\n        padding: 0.75em;\n        background-color: ${colorOrange};\n    `;\n\n    const Div = styled.div`\n        background-color: white;\n        width: 1.75em;\n        height: 0.12em;\n        margin-bottom: 0.4em;\n\n        &:last-child {\n            margin: 0;\n        }\n    `;\n\n    return (\n        <Nav>\n            <Button onClick={_ => setToggled(!toggled)}>\n                <Div></Div>\n                <Div></Div>\n                <Div></Div>\n            </Button>\n        </Nav>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst colorGrey = \"#EEEEEE\";\nconst colorOrange = \"#FFA341\";\nconst colorWhite = \"#FFFFFF\";\n\nconst users = [\"user1\", \"user2\"];\n\nexport function UserList() {\n    const userList = users.map(user => <User name={user}/>);\n    const Ul = styled.ul`\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        height: 100vh;\n        width: 15em;\n        box-shadow-right: box-shadow: 5px 10px ${colorGrey};\n    `;\n    return (\n        <Ul>\n            {userList}\n        </Ul>\n    );\n}\n\nfunction User(props) {\n    const Div = styled.div`\n        color: ${colorWhite};\n        background-color: ${colorOrange};\n        padding: 0.8em;\n        display: inline-block;\n        border-radius: 50%;\n        margin-right: 1em;\n\n        div {\n            width: 1.25em;\n            height: 1.25em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    `;\n\n    const Span = styled.span`\n        font-size: 0.8em;\n    `;\n\n    const Li = styled.li`\n        display: flex;\n        align-items: center;\n        padding: 0.5em 1em;\n    `;\n\n    return (\n        <Li>\n            <Div>\n                <div>\n                    <FontAwesomeIcon icon={faUser}/>\n                </div>\n            </Div>\n            <Span>{props.name}</Span>\n        </Li>\n    );\n}\n","import './App.css';\nimport { SubmitButton } from './components/Buttons';\nimport { ChatTextArea } from './components/ChatTextArea';\nimport { ChatBox } from './components/ChatBox';\nimport { MobileNavigation } from './components/Navigation';\nimport { UserList } from './components/Users';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SubmitButton/>\n      <ChatTextArea/>\n      <ChatBox/>\n      <MobileNavigation/>\n      <UserList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}